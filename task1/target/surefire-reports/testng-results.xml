<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="14" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="140" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="140" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
      <class name="com.epam.training.test.TaxiParkListHelperTest">
        <test-method status="PASS" signature="testFindBySpeed(java.lang.String, java.util.List)[pri:0, instance:com.epam.training.test.TaxiParkListHelperTest@67b64c45]" name="testFindBySpeed" duration-ms="0" started-at="2018-10-21T20:19:24Z" data-provider="dataFindBySpeed" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxipark.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ElectricCar{batteryType='lion', powerConsumption=34} Car{brand='Skoda', model='Octavia', cost=9332, consumption=10, maxSpeed=190}, GasolineCar{fuelType='diesel', fuelConsumption=12} Car{brand='Lada', model='Sputnik', cost=5433, consumption=15, maxSpeed=150}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindBySpeed -->
        <test-method status="PASS" signature="testFindBySpeedException()[pri:0, instance:com.epam.training.test.TaxiParkListHelperTest@67b64c45]" name="testFindBySpeedException" duration-ms="16" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <exception class="java.security.InvalidParameterException">
            <full-stacktrace>
              <![CDATA[java.security.InvalidParameterException
at helper.TaxiParkListHelper.searchCarBySpeed(TaxiParkListHelper.java:22)
at com.epam.training.test.TaxiParkListHelperTest.testFindBySpeedException(TaxiParkListHelperTest.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.security.InvalidParameterException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindBySpeedException -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkListHelperTest@67b64c45]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkListHelperTest@67b64c45]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testSortByConsumption(java.lang.String, java.util.List)[pri:0, instance:com.epam.training.test.TaxiParkListHelperTest@67b64c45]" name="testSortByConsumption" duration-ms="0" started-at="2018-10-21T20:19:24Z" data-provider="dataSortByConsumption" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxipark.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ElectricCar{batteryType='lion', powerConsumption=34} Car{brand='Skoda', model='Octavia', cost=9332, consumption=10, maxSpeed=190}, GasolineCar{fuelType='diesel', fuelConsumption=12} Car{brand='Lada', model='Sputnik', cost=5433, consumption=15, maxSpeed=150}, GasolineCar{fuelType='diesel', fuelConsumption=12} Car{brand='Renault', model='Logan', cost=10234, consumption=23, maxSpeed=220}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByConsumption -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkListHelperTest@67b64c45]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
      </class> <!-- com.epam.training.test.TaxiParkListHelperTest -->
      <class name="com.epam.training.test.FromDTOConverterTest">
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.FromDTOConverterTest@96532d6]" name="getFileReader" is-config="true" duration-ms="63" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.FromDTOConverterTest@96532d6]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testConvertToCar()[pri:0, instance:com.epam.training.test.FromDTOConverterTest@96532d6]" name="testConvertToCar" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToCar -->
        <test-method status="PASS" signature="testNullConvertToCar()[pri:0, instance:com.epam.training.test.FromDTOConverterTest@96532d6]" name="testNullConvertToCar" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullConvertToCar -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.FromDTOConverterTest@96532d6]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testReturnNullConvertToCar()[pri:0, instance:com.epam.training.test.FromDTOConverterTest@96532d6]" name="testReturnNullConvertToCar" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReturnNullConvertToCar -->
      </class> <!-- com.epam.training.test.FromDTOConverterTest -->
      <class name="com.epam.training.test.JsonFileHandlerTest">
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.JsonFileHandlerTest@3796751b]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testNullConvertJsonObject()[pri:0, instance:com.epam.training.test.JsonFileHandlerTest@3796751b]" name="testNullConvertJsonObject" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullConvertJsonObject -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.JsonFileHandlerTest@3796751b]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testConvertJsonObject()[pri:0, instance:com.epam.training.test.JsonFileHandlerTest@3796751b]" name="testConvertJsonObject" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertJsonObject -->
      </class> <!-- com.epam.training.test.JsonFileHandlerTest -->
      <class name="com.epam.training.test.TaxiParkTest">
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testAddCar(java.lang.String, java.util.List, int)[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="testAddCar" duration-ms="16" started-at="2018-10-21T20:19:24Z" data-provider="dataAddCar" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxipark.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ElectricCar{batteryType='lion', powerConsumption=34} Car{brand='Kia', model='Rio', cost=5000, consumption=10, maxSpeed=190}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[29999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCar -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testDeleteCar(java.lang.String, java.util.List, int)[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="testDeleteCar" duration-ms="15" started-at="2018-10-21T20:19:24Z" data-provider="dataDeleteCar" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxipark.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[1, 1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9332]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCar -->
        <test-method status="PASS" signature="testDeleteCar(java.lang.String, java.util.List, int)[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="testDeleteCar" duration-ms="0" started-at="2018-10-21T20:19:24Z" data-provider="dataDeleteCar" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxitest1.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[1]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9332]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCar -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testCreateTaxiPark(java.lang.String, int)[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="testCreateTaxiPark" duration-ms="0" started-at="2018-10-21T20:19:24Z" data-provider="dataCreateTaxiPark" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxipark.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateTaxiPark -->
        <test-method status="PASS" signature="testAddCar(java.lang.String, java.util.List, int)[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="testAddCar" duration-ms="0" started-at="2018-10-21T20:19:24Z" data-provider="dataAddCar" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxitest1.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ElectricCar{batteryType='lion', powerConsumption=34} Car{brand='Kia', model='Rio', cost=5000, consumption=10, maxSpeed=190}, GasolineCar{fuelType='diesel', fuelConsumption=30} Car{brand='Volkswagen', model='Polo', cost=10534, consumption=25, maxSpeed=200}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[28099]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCar -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
        <test-method status="PASS" signature="testSetCarList(java.lang.String, int)[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="testSetCarList" duration-ms="0" started-at="2018-10-21T20:19:24Z" data-provider="dataSetCarList" finished-at="2018-10-21T20:19:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[taxipark.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24999]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetCarList -->
        <test-method status="PASS" signature="getFileReader()[pri:0, instance:com.epam.training.test.TaxiParkTest@4411d970]" name="getFileReader" is-config="true" duration-ms="0" started-at="2018-10-21T20:19:24Z" finished-at="2018-10-21T20:19:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getFileReader -->
      </class> <!-- com.epam.training.test.TaxiParkTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
